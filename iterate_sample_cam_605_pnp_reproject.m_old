

camera_K = [...
   322.9596901156589 , 000.0000000000000 , 176.8267919600727 ; %,    //  f_x ,   0 , c_x
                000.0000000000000 , 323.8523693059909 , 146.7681514313797 ; %,    //    0 , f_y , c_y
                  0.0 ,               0.0 ,               1.0 ];              
points_2D = [ ... 
	38.97217696070338 , 118.2824709789849 ;	32.034306321017944 , 192.466939933053 ;	93.31441891387527 , 96.54772083404143 ;	87.32955212333361 , 157.37000945678204 ;	126.46986839810853 , 83.95727803781195 ;	144.80234344193434 , 76.06812336979348 ;	83.63824888189805 , 65.3743299935233 ;	47.35379326183386 , 58.933993724246704 ;	31.260903243243753 , 47.66728455326394 ;	52.84048494641837 , 49.42519645281782 ;	68.43349356644761 , 50.29893458007114 ;	99.41423879973189 , 54.23701582416317 ;	140.43662401983312 , 57.78533468822957 ;	184.6549923917499 , 61.71392210264832 ;	207.38871018966236 , 102.29672951947487 ;	275.30206919268994 , 114.96724053260937 ;	293.2644103714822 , 185.05199500385703 ;	238.59645001787416 , 113.10569348255757 ;	210.8308477273696 , 169.92301726639607 ;	112.4366981380515 , 149.69753342557786 ;	37.934296161388836 , 82.22182428074302 ;	78.136095302918 , 56.446901114069455 ;	129.68187521876968 , 60.96949440117183 ;	263.01463136305887 , 72.05488641437643 ;
]'  ;     
points_3D_reported = [ ... 
	1.7717174526377166 , -1.014855736746979 , 0.6449999999999999 ;	1.642219750065936 , -1.026272611478297 , 0.3549999999999999 ;	2.1116922597458285 , -0.9341562117494199 , 0.645 ;	1.9820979593314398 , -0.9444186334960223 , 0.355 ;	2.3898963582177686 , -0.9349478401743129 , 0.6450000000000001 ;	2.6032714267209642 , -0.9036965824601315 , 0.6450000000000001 ;	2.6628059086877585 , -0.21156018251910647 , 0.645 ;	2.743537686473329 , 0.3291713925461128 , 0.645 ;	3.1656936039137213 , 1.326330333387876 , 0.645 ;	3.1597747648024805 , 0.9422865604092621 , 0.6449999999999999 ;	3.154224126056554 , 0.6998487784652108 , 0.645 ;	3.0574971695883097 , 0.13513209977951893 , 0.645 ;	3.0375155832876106 , -0.32412310917440856 , 0.645 ;	3.028721123002628 , -0.7563925598051209 , 0.645 ;	3.0234366857776207 , -0.9625360578323743 , 0.355 ;	2.949934868393747 , -1.5002641928531644 , 0.3549999999999999 ;	2.318718481951249 , -1.8871884647593191 , 0.355 ;	2.280621502760777 , -1.633004103631637 , 0.6450000000000001 ;	2.277063121141343 , -1.5030528130637841 , 0.35500000000000004 ;	2.23069390534198 , -0.9663865655464772 , 0.355 ;	2.179028004770522 , -0.33460366612249515 , 0.645 ;	1.5163367184896286 , 0.31446490105955277 , 0.6450000000000001 ;	1.5527745728426372 , -0.037352994653233725 , 0.645 ;	1.7793715318652716 , -1.2328781175600245 , 0.645 ; 
]'  ;               
points_2D = points_2D(:,1:20);
points_3D_reported = points_3D_reported(:,1:20);

estimates = zeros(10,3);
err = zeros(10,1);
num_iternations = 100;
size(points_2D)
world_to_camera_rotm_hist = zeros(num_iternations, 3, 3);
world_to_camera_trans_hist = zeros(num_iternations, 3, 1);
reprojected_errs = zeros(num_iternations, size(points_2D,1), size(points_2D,2));
reprojected_errs_bad = zeros(num_iternations, size(points_2D,2));
for ii_ = 1:num_iternations 
   %-- estimation 
    [aa , bb , cc  , world_to_camera_est_, world_to_local_FLU ] = func_cam_605_select_points_input( camera_K , points_2D , points_3D_reported );
    estimates(ii_,:) = [aa bb cc];
    err(ii_) = sqrt(sum(([0.887598151824310  -1.97885166499638  0.957895776523009] -  [aa bb cc] ).^2));        
    %-- reprojection                       
    T_FLU_to_RDF = [ ...
         0    -1     0     0
         0     0    -1     0
         1     0     0     0
         0     0     0     1   ] ;
    %     points_3D_reported_world_RDF = T_FLU_to_RDF * vertcat(points_3D_reported, ones( 1 ,  size(points_3D_reported, 2) ) ) ;    
    world_to_camera_rotm  = world_to_camera_est_(1:3 , 1:3) ;     world_to_camera_rotm_hist( ii_ , : , :) = world_to_camera_rotm ;
    world_to_camera_trans = world_to_camera_est_(1:3 , 4) ;        world_to_camera_trans_hist( ii_ , : , :) = world_to_camera_trans ;
    world_to_local_FLU = [ [ world_to_camera_rotm' , world_to_camera_rotm' * world_to_camera_trans .* -1]  ;  [ 0 0 0 1 ] ]  ;
    points_3D_reported_world_FLU =  vertcat(points_3D_reported, ones( 1 ,  size(points_3D_reported, 2) ) ) ;
    camera_K_hom_RDF = [ camera_K , [ 0 0 0 ]'  ] ;
    duh_ = (world_to_local_FLU * points_3D_reported_world_FLU)'* T_FLU_to_RDF;
    reprojected_ = camera_K_hom_RDF  *  duh_'    ;
    reprojected__ = reprojected_ ;
    reprojected__(1,:)= reprojected_(1,:).* reprojected_(3,:).^-1  ;
    reprojected__(2,:)= reprojected_(2,:).* reprojected_(3,:).^-1  ;
    reprojected__(3,:)= reprojected_(3,:).* reprojected_(3,:).^-1  ;
    reprojected_errs( ii_ , : , : ) = abs(points_2D - reprojected__(1:2,:) )  ;
    reprojected_errs_bad( ii_ , : )  =  reprojected__( 1 , : ) < 0  |  reprojected__( 2 , : ) < 0 ;
end
grid on; axis equal; xlabel('x'); ylabel('y'); zlabel('z');
pose_bad = sum(reprojected_errs_bad);
% size(reprojected_errs_bad)
% points_2D
% reprojected__

%%
figure; hold on; grid on; axis equal; xlabel('x'); ylabel('y'); zlabel('z');
for ii_ = 1 :size(pose_bad,2)
    if pose_bad(ii_)        
        draw_axes_direct_c( squeeze(world_to_camera_rotm_hist(ii_,:,:)), world_to_camera_trans_hist(ii_,:,:)', 'BAD', 2,'k')
        plot3( world_to_camera_trans_hist(ii_,1,:),  world_to_camera_trans_hist(ii_,2,:),  world_to_camera_trans_hist(ii_,3,:),  'kd' , 'LineWidth', 3);
    else
        draw_axes_direct( squeeze(world_to_camera_rotm_hist(ii_,:,:)), world_to_camera_trans_hist(ii_,:,:)', 'GOOD', 1)
    end
end



%%
size(  squeeze(  reprojected_errs(:,1,:)   )  )

size(  squeeze(  sqrt(  reprojected_errs(:,1,:).^2 + reprojected_errs(:,2,:).^2  )  )  )

squeeze(  sqrt(  reprojected_errs(:,1,:).^2 + reprojected_errs(:,2,:).^2  )  )

squeeze(reprojected_errs(:,1,:)) < 0

reprojected_errs = abs( reprojected_errs );

reprojected__ < 0


%%
figure;hold on; grid on;
size(reprojected_errs)
for ii_ = 1:size(reprojected_errs,1) 
    % TODO - check that the points are in the right order 
    plot( ii_, sum(sum( squeeze( reprojected_errs( ii_ , : , : )  )  )) , 'rx')
end


%%
%  How many of the poses found are like the good pose?  
%  
% world_to_camera_trans_hist 
cam_605_good_trans = cam_605_good(1:3) ;
trans_errs = world_to_camera_trans_hist - repmat(cam_605_good_trans, size(world_to_camera_trans_hist,1) , 1 )  ;
trans_errs_rs = sqrt(trans_errs(:,1).^2+trans_errs(:,2).^2+trans_errs(:,3).^2)  ;
figure; plot(trans_errs_rs,'rx');
figure; hist(trans_errs_rs);
trans_errs_rs( trans_errs_rs< median(trans_errs_rs) )
figure; plot(  trans_errs_rs( trans_errs_rs< median(trans_errs_rs) )   , 'rx' );

%%
trans_errs_rs = sqrt( trans_errs(:,3).^2 )  ;
figure; plot(trans_errs_rs,'rx');
figure; hist(trans_errs_rs);
trans_errs_rs( trans_errs_rs< median(trans_errs_rs) )
figure; plot(  trans_errs_rs( trans_errs_rs< median(trans_errs_rs) )   , 'rx' );

%%
trans_errs_rs = sqrt( (:,3).^2 )  ;
figure; plot3(  trans_errs(:,1) , trans_errs(:,2) , trans_errs(:,3) , 'rx');  grid on; axis equal; xlabel('x'); ylabel('y'); zlabel('z');
figure; plot3(  abs(trans_errs(:,1)) , abs(trans_errs(:,2)) , abs(trans_errs(:,3)) , 'rx');  grid on; axis equal; xlabel('x'); ylabel('y'); zlabel('z');
figure; hist(trans_errs_rs);
trans_errs_rs( trans_errs_rs< median(trans_errs_rs) )
figure; plot(  trans_errs_rs( trans_errs_rs< median(trans_errs_rs) )   , 'rx' );

%%  
%         Find 2D-3D points which give problems
cam_605_good = [...
    0.887598151824310  -1.97885166499638  0.957895776523009  -0.0318571289684177  0.187864426800859  0.248082165295458  0.949814360672122
    ];
apoint = [2, -1.1, 0.4 ]';
world_to_camera_good_rotm =  quat2rotm( [ cam_605_good(1,7) , cam_605_good(1,4:6) ] );
world_to_camera_good_trans = cam_605_good(1,1:3)';
world_to_camera_good_ = [  ...
    [world_to_camera_good_rotm , world_to_camera_good_trans]  ;
    0 0 0 1 ] 
world_to_local_FLU = [ [ world_to_camera_good_rotm' , world_to_camera_good_rotm' * world_to_camera_good_trans .* -1]  ;  [ 0 0 0 1 ] ]

points_3D_reported_world_FLU =  vertcat(points_3D_reported, ones( 1 ,  size(points_3D_reported, 2) ) );
camera_K_hom_RDF = [ camera_K , [ 0 0 0 ]'  ];

camera_K_hom_RDF * T_FLU_to_RDF * [ 1 0 0  1 ]'

reprojected_ = camera_K_hom_RDF * T_FLU_to_RDF * world_to_local_FLU * points_3D_reported_world_FLU

reprojected__ = reprojected_; 
reprojected__(1,:)= reprojected_(1,:).* reprojected_(3,:).^-1
reprojected__(2,:)= reprojected_(2,:).* reprojected_(3,:).^-1
reprojected__(3,:)= reprojected_(3,:).* reprojected_(3,:).^-1
errs = points_2D - reprojected__(1:2,:)
size(errs)
errs_sq = sqrt( errs(1,:).^2 + errs(2,:).^2 )
figure; plot( errs_sq )
figure; hist( errs_sq )
var( errs_sq )
std( errs_sq )
median( errs_sq )
mode( errs_sq )
mean( errs_sq )
median( errs_sq ) + std( errs_sq )
mode( errs_sq ) + std( errs_sq )

errs_sq > median( errs_sq ) + std( errs_sq )




%%



cam_605_good = [...
    0.887598151824310  -1.97885166499638  0.957895776523009  -0.0318571289684177  0.187864426800859  0.248082165295458  0.949814360672122
    ];
apoint = [2, -1.1, 0.4 ]';
world_to_camera_good_rotm =  quat2rotm( [ cam_605_good(1,7) , cam_605_good(1,4:6) ] );
world_to_camera_good_trans = cam_605_good(1,1:3)';
figure;hold on; grid on; axis equal; xlabel('x'), ylabel('y'), zlabel('z');
draw_axes_direct(world_to_camera_good_rotm,world_to_camera_good_trans,'',0.2)
plot3( 0 , 0 , 0 , 'rx')
plot3( 2 , -3 , 0 , 'rx')
plot3(points_3D_reported(1,:),points_3D_reported(2,:),points_3D_reported(3,:),'bo')
plot3(apoint(1),apoint(2),apoint(3),'bx')
% zlim( [ 0, 1.5 ] )

wc_ = vertcat (  horzcat( world_to_camera_good_rotm'  ,  world_to_camera_good_rotm' * ( -1*world_to_camera_good_trans )  )  ,  [ 0 0 0 1 ] )
wc_ = vertcat (  horzcat( world_to_camera_good_rotm  ,  world_to_camera_good_rotm * ( -1*world_to_camera_good_trans )  )  ,  [ 0 0 0 1 ] )
wc_ = vertcat (  horzcat( world_to_camera_good_rotm  ,  world_to_camera_good_trans  )  ,  [ 0 0 0 1 ] )

% world_to_camera_est_ = vertcat( horzcat( , )  ,  [  0  0  0  1  ]  )
%     reprojected_ = horzcat( camera_K , [ 0 ; 0 ; 0  ]) * world_to_camera_est_ * vertcat(points_3D_reported, ones( 1 ,  size(points_3D_reported, 2)  )  ) ;
    reprojected_ = horzcat( camera_K , [ 0 ; 0 ; 0  ]) * wc_ * vertcat(points_3D_reported, ones( 1 ,  size(points_3D_reported, 2)  )  ) ; 
    reprojected_ = horzcat( camera_K , [ 0 ; 0 ; 0  ]) * wc_ * vertcat(apoint, ones( 1 ,  size(apoint, 2)  )  ) ; 
    reprojected__ = reprojected_; 
    plot(reprojected__(1,:),reprojected__(2,:), 'gx')
    reprojected__(1,:)= reprojected_(1,:).* reprojected_(3,:).^-1
    reprojected__(2,:)= reprojected_(2,:).* reprojected_(3,:).^-1
    reprojected__(3,:)= reprojected_(3,:).* reprojected_(3,:).^-1
%     points_2D - reprojected__(1:2,:)
    figure;  hold on; grid on; axis equal; xlabel('x'), ylabel('y'), 
    plot(points_2D(1,:),points_2D(2,:), 'bo')
    plot(reprojected__(1,:),reprojected__(2,:), 'rx')


plot3(cam_605_good(:,1),cam_605_good(:,2),cam_605_good(:,3), 'ks');
grid on; axis equal; xlabel('x');ylabel('y');zlabel('z');

figure('Name','Estimates of Cam 605'); hold on; grid on; axis equal; xlabel('x');ylabel('y');zlabel('z');
plot3(estimates(:,1),estimates(:,2),estimates(:,3), 'rx');
plot3(cam_605_good(:,1),cam_605_good(:,2),cam_605_good(:,3), 'ks');





